FancyService is a third-party service that tells us the name and description
of a product given its UPC (Universal Product Code). For our convenience,
they provide a PHP class implementation that wraps the network communication
with their server as follows.

  1  <?php
  2  /**
  3   * This class implementation is provided by FancyService.
  4   */
  5
  6  namespace FancyService;
  7
  8  /**
  9   * A client to communicate with FancyService server.
 10   */
 11  class Client
 12  {
 13      /**
 14       * Constructor.
 15       *
 16       * @param array $config Contains credentials and service URI.
 17       */
 18      public function __construct(array $config)
 19      {
 20          // Already implemented.
 21      }
 22
 23      /**
 24       * Send a product UPC and receive product information.
 25       *
 26       * @param  string $upc
 27       * @return array|null  An associative array with two keys or null for nothing found.
 28       *                     [
 29       *                         'prod_name' => Name of the product.
 30       *                         'prod_desc' => Description of the product.
 31       *                     ]
 32       * @throws \RuntimeException For unexpected events.
 33       */
 34      public function submit($upc)
 35      {
 36          // Already implemented.
 37      }
 38  }

We want to design and implement a class/API utilizing this Client so that given
a UPC, our application can retrieve the product information from FancyService.
In addition, using this class, the application should be able to store the
returned data to a MySQL/MariaDb database table.

The schema of the table is as follows.

fancyservice_product_info
  + id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
  + upc VARCHAR(20) NOT NULL
  + name VARCHAR(128)
  + description TEXT
  + created_at DATETIME NOT NULL

Knowing that a database connection and FancyService configuration can be retrieved by

  + Mbira\DbConnection::getInstance() - return an instance of PDO
                                        (https://secure.php.net/manual/en/class.pdo.php)
  + Mbira\Config::get('FancyService') - return an array of FancyService config

Please provide a complete PHP implementation of the class/API including a README with usage
examples. The following is also nice to have but not required.
  + Unit tests.
  + A sample implementation in a PHP framework of your choice.
